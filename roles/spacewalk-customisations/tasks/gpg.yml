---
# Based on ansible recipe: https://github.com/juju4/ansible-gpgkey_generate

- name: "GPG Generate: check entropy state"
  command: "cat /proc/sys/kernel/random/entropy_avail"
  changed_when: false
  register: entropy
  
- debug: var=entropy

- name: "GPG Generate: yum | Ensure have enough randomness"
  yum: 
    name: ['haveged', 'rng-tools', 'gnupg', 'acl']
    state: present 
    update_cache: yes
  register: pkg_result
  until: pkg_result is success
  
- name: "GPG Generate: Enable haveged"
  service:
    name: haveged
    state: started
    enabled: yes
  when: >
    not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
    
- name: "GPG Generate: check entropy state"
  command: "cat /proc/sys/kernel/random/entropy_avail"
  changed_when: false
  register: entropy2
  
- debug: var=entropy2

- name: "GPG Generate: Ensure .gnupg config directory exists with right permissions"
  file:
    dest: /root/.gnupg
    state: directory
    mode: 0700
    owner: root

- name: "GPG Generate: set defaut gpg options"
  template:
    src: "{{ role_path }}/files/gpg.conf"
    dest: /root/.gnupg/gpg.conf
    mode: 0600
    owner: root

- name: "GPG Generate: copy default template for gpg key generation"
  template:
    src: gen-key-script.j2
    dest: /root/.gnupg/gen-key-script
    mode: 0600
    owner: root

- name: "GPG Generate: check existing secret key"
  shell: "gpg --list-secret-keys | grep '{{ gpg_realname }}'"
  changed_when: false
  ignore_errors: true
  register: gpgkeys

- debug: var=gpgkeys

- name: "GPG Generate: generate gpg key"
  command: "gpg --batch --gen-key /root/.gnupg/gen-key-script"
  args:
    chdir: /root
  when: gpgkeys is defined and not gpgkeys.stdout
  register: genkey

- name: "GPG Generate: import generated keys"
  command: "gpg --import /root/{{ gpg_pubkeyfile }} /root/{{ gpg_privkeyfile }}"
  when: >
    gpgkeys is defined and not gpgkeys.stdout

- name: "GPG Generate: get user armored public key"
  shell: "gpg --export -a {{ gpg_useremail }} > /var/www/html/pub/{{ gpg_pubkeyfileexport }}"
  changed_when: false
