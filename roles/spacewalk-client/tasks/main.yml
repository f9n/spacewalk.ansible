---
- name: Ensure spacewalk hostname in /etc/hosts
  lineinfile: dest=/etc/hosts regexp=^{{ spacewalk_ip }} line="{{ spacewalk_ip }} {{ spacewalk_hostname }}"

- name: install CentOS spacewalk repository from URL
  yum: name=https://copr-be.cloud.fedoraproject.org/results/%40spacewalkproject/spacewalk-2.9-client/epel-{{ansible_distribution_major_version}}-x86_64/00911911-spacewalk-repo/spacewalk-client-repo-2.9-4.el{{ansible_distribution_major_version}}.noarch.rpm  state=present
  when: ansible_distribution == "CentOS"

- name: install extra packages for enterprise linux (EPEL) from URL (CentOS 6)
  yum: name=http://dl.fedoraproject.org/pub/epel/6/{{ ansible_machine }}/epel-release-6-8.noarch.rpm state=present
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "6"

- name: install extra packages for enterprise linux (EPEL) (CentOS 7)
  yum: name=epel-release state=present
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: Install all packages for CentOS client
  yum:
    name: ['rhn-client-tools', 'rhn-check', 'rhn-setup', 'rhnsd', 'm2crypto', 'yum-rhn-plugin', 'osad']
    state: present
  when: ansible_distribution == "CentOS"

- name: Add Ubuntu Spacewalk Client repo key (special thanks to OpenSuse)
  apt_key: 
    url: http://download.opensuse.org/repositories/systemsmanagement:/spacewalk:/2.9:/debclients/xUbuntu_{{ ansible_distribution_version }}/Release.key 
    state: present 
  when: ansible_distribution == "Ubuntu"
  
- name: Add Ubuntu Spacewalk Client repo (special thanks to OpenSuse)
  apt_repository: 
    repo: 'deb http://download.opensuse.org/repositories/systemsmanagement:/spacewalk:/2.9:/debclients/xUbuntu_{{ ansible_distribution_version }}/ /' 
    state: present 
    filename: spacewalk2.9-debclients.list
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Install packages for Ubuntu
  apt:       
    name: ['rhn-client-tools', 'rhn-check', 'rhn-setup', 'rhnsd', 'apt-transport-spacewalk', 'rhncfg', 'rhncfg-actions']
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Remove Ubuntu Spacewalk Client repo
  apt_repository: 
    repo: 'deb http://download.opensuse.org/repositories/systemsmanagement:/spacewalk:/2.9:/debclients/xUbuntu_{{ ansible_distribution_version }}/ /' 
    state: absent 
    filename: spacewalk2.9-debclients.list
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Fix issue with apt-transport-spacewalk (packages infinitly listed as upgradable)
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - { src: '{{ role_path }}/files/pre_invoke.py', dest: '/usr/lib/apt-spacewalk/pre_invoke.py' }
    - { src: '{{ role_path }}/files/post_invoke.py', dest: '/usr/lib/apt-spacewalk/post_invoke.py' }
  when: ansible_distribution == "Ubuntu"

- name: Download OSAD packages
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: '0644'
  with_items:
    - { url: 'http://{{ spacewalk_hostname }}/pub/pyjabber_0.5.0-1.4-{{ ansible_distribution_release }}_all.deb', dest: '/tmp/pyjabber_0.5.0-1.4-{{ ansible_distribution_release }}_all.deb' }
    - { url: 'http://{{ spacewalk_hostname }}/pub/osad_5.11.108-{{ ansible_distribution_release }}_all.deb', dest: '/tmp/osad_5.11.108-{{ ansible_distribution_release }}_all.deb' }
  when: ansible_distribution == "Ubuntu"

- name: Install OSAD packages
  shell: dpkg -i /tmp/pyjabber_0.5.0-1.4-{{ ansible_distribution_release }}_all.deb /tmp/osad_5.11.108-{{ ansible_distribution_release }}_all.deb
  when: ansible_distribution == "Ubuntu"

- name: remove local deb files
  file:
    path: ['/tmp/osad_5.11.108-{{ ansible_distribution_release }}_all.deb', '/tmp/pyjabber_0.5.0-1.4-{{ ansible_distribution_release }}_all.deb']
    state: absent

- name: Install Spacewalk CA certificate from server
  yum:
    name: "http://{{ spacewalk_hostname }}/pub/rhn-org-trusted-ssl-cert-1.0-1.noarch.rpm"
    state: present
  when: ansible_distribution == "CentOS"

- name: Create rhn directory
  file:
    path: /usr/share/rhn
    state: directory
  when: ansible_distribution == "Ubuntu"

- name: Install Spacewalk CA certificate from server
  get_url:
    url: http://{{ spacewalk_hostname }}/pub/RHN-ORG-TRUSTED-SSL-CERT
    dest: /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
    mode: 644
  when: ansible_distribution == "Ubuntu"

- name: register with spacewalk server
  command: rhnreg_ks --serverUrl=http://{{ spacewalk_hostname }}/XMLRPC --activationkey=1-centos-{{ansible_distribution_major_version}}
  when: ansible_distribution == "CentOS"
  ignore_errors: true

- name: register with spacewalk server
  command: rhnreg_ks --serverUrl=http://{{ spacewalk_hostname }}/XMLRPC --activationkey=1-ubuntu-{{ansible_distribution_version.split('.')|join('')}}
  when: ansible_distribution == "Ubuntu"
  ignore_errors: true

- name: Add an Apt signing key, uses whichever key is at the URL
  apt_key:
    url: http://{{ spacewalk_hostname }}/pub/{{ gpg_pubkeyfileexport }}
    state: present
    validate_certs: no
  when: ansible_distribution == "Ubuntu"

- name: Create RHN actions directory
  file:
    path: /usr/share/rhn/actions
    state: directory
  when: ansible_distribution == "Ubuntu"

- name: Ubuntu clients - Install Ubuntu errata enhancement
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - { src: '{{ role_path }}/files/errata.py', dest: '/usr/share/rhn/actions/errata.py' }
    - { src: '{{ role_path }}/files/packages.py', dest: '/usr/share/rhn/actions/packages.py' }
  when: ansible_distribution == "Ubuntu"

- name: Remove default ubuntu 16 repo's
  apt_repository:
    repo: "{{ item.repo }}"
    state: absent
  with_items:
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ xenial main restricted' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates main restricted' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ xenial universe' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates universe' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ xenial multiverse' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates multiverse' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse' }
    - { repo: 'deb http://archive.canonical.com/ubuntu xenial partner' }
    - { repo: 'deb http://security.ubuntu.com/ubuntu xenial-security main restricted' }
    - { repo: 'deb http://security.ubuntu.com/ubuntu xenial-security universe' }
    - { repo: 'deb http://security.ubuntu.com/ubuntu xenial-security multiverse' }
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"

- name: Remove default ubuntu 18 repo's
  apt_repository:
    repo: "{{ item.repo }}"
    state: absent
  with_items:
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ bionic main restricted' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ bionic universe' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates universe' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ bionic multiverse' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates multiverse' }
    - { repo: 'deb http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse' }
    - { repo: 'deb http://archive.canonical.com/ubuntu bionic partner' }
    - { repo: 'deb http://security.ubuntu.com/ubuntu bionic-security main restricted' }
    - { repo: 'deb http://security.ubuntu.com/ubuntu bionic-security universe' }
    - { repo: 'deb http://security.ubuntu.com/ubuntu bionic-security multiverse' }
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"
  
- name: Start OSAD client (systemd only)
  systemd:
    name: osad
    state: started
    enabled: yes
    masked: no
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "7" or ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == "18"
  
- name: Start OSAD client (service only)
  service:
    name: osad
    state: started
    enabled: yes
    masked: no
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "6" or ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == "16"
  
- name: Enable rhn_check client via cron (required for check-in)
  cron:
    name: rhn_check
    weekday: "*"
    minute: "0"
    hour: "*/4"
    user: root
    job: "sleep $(( ( RANDOM % 240 ) ))m ; /usr/sbin/rhn_check"
    cron_file: ansible_rhn_check
