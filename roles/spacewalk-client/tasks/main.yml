---
- include: prepare.yml

- include: install.yml

- name: (CentOS) Install Spacewalk CA certificate from server
  yum:
    name: "http://{{ spacewalk_ip }}/pub/{{ spacewalk_rhn_org_trusted_ssl_cert_rpm_package }}"
    state: present
  when: ansible_distribution == "CentOS"

- name: (Ubuntu) Create rhn directory
  file:
    path: /usr/share/rhn
    state: directory
  when: ansible_distribution == "Ubuntu"

- name: (Ubuntu) Install Spacewalk CA certificate
  get_url:
    url: http://{{ spacewalk_hostname }}/pub/RHN-ORG-TRUSTED-SSL-CERT
    dest: /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
    mode: 644
  when: ansible_distribution == "Ubuntu"

- name: (CentOS) register with spacewalk server
  command: rhnreg_ks --serverUrl=http://{{ spacewalk_hostname }}/XMLRPC --activationkey=1-centos-{{ansible_distribution_major_version}}
  when: ansible_distribution == "CentOS"
  ignore_errors: true

- name: (Ubuntu) register with spacewalk server
  command: rhnreg_ks --serverUrl=http://{{ spacewalk_hostname }}/XMLRPC --activationkey=1-ubuntu-{{ansible_distribution_version.split('.')|join('')}}-security
  when: ansible_distribution == "Ubuntu"
  ignore_errors: true

- name: (Ubuntu) Add an apt signing key
  apt_key:
    url: http://{{ spacewalk_hostname }}/pub/{{ gpg_pubkeyfileexport }}
    state: present
    validate_certs: no
  when: ansible_distribution == "Ubuntu"

- name: (Ubuntu) Create RHN actions directory
  file:
    path: /usr/share/rhn/actions
    state: directory
  when: ansible_distribution == "Ubuntu"

- name: (Ubuntu) Install errata enhancement for clients
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - {
        src: "{{ role_path }}/files/errata.py",
        dest: "/usr/share/rhn/actions/errata.py",
      }
    - {
        src: "{{ role_path }}/files/packages.py",
        dest: "/usr/share/rhn/actions/packages.py",
      }
  when: ansible_distribution == "Ubuntu"

- include: old_repos.yml

- name: (Systemd) Start OSAD client
  systemd:
    name: osad
    state: started
    enabled: yes
    masked: no
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "7" or ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == "18"

- name: (Init) Start OSAD client
  service:
    name: osad
    state: started
    enabled: yes
    masked: no
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "6" or ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == "16"

- name: (All) Enable rhn_check client via cron (required for check-in)
  cron:
    name: rhn_check
    weekday: "*"
    minute: "0"
    hour: "*/4"
    user: root
    job: "bash -c 'sleep $(( ( RANDOM % 240 ) ))m' ; /usr/sbin/rhn_check"
    cron_file: ansible_rhn_check
